/*
 * Copyright Â© 2024 Paul Tavitian.
 */

package cloud.tavitian.dedrmtools.kfxdedrm;

import java.nio.charset.StandardCharsets;
import java.util.LinkedHashMap;

final class ObfuscationTable extends LinkedHashMap<String, ObfuscationValue> {
    private static final ObfuscationTable instance = new ObfuscationTable();

    private ObfuscationTable() {
        // every VoucherEnvelope version has a corresponding "word" and magic number, used in obfuscating the shared secret
        // 4-digit versions use their own obfuscation/scramble. It does not seem to depend on the "word" and number

        put("V1", new ObfuscationValue(0x00, null));
        put("V2", new ObfuscationValue(0x05, "Antidisestablishmentarianism".getBytes(StandardCharsets.US_ASCII)));
        put("V3", new ObfuscationValue(0x08, "Floccinaucinihilipilification".getBytes(StandardCharsets.US_ASCII)));
        put("V4", new ObfuscationValue(0x07, new byte[]{0x3e, 0x14, 0x0c, 0x12, 0x10, 0x2d, 0x13, 0x26, 0x18, 0x55, 0x1d, 0x05, 0x52, 0x6c, 0x74, 0x03, 0x21, 0x19, 0x1b, 0x13, 0x04, 0x5d, 0x59, 0x19, 0x2c, 0x09, 0x1b}));
        put("V5", new ObfuscationValue(0x06, new byte[]{0x7e, 0x18, 0x7e, 0x16, 0x4a, 0x5c, 0x18, 0x10, 0x05, 0x0b, 0x07, 0x09, 0x0c, 0x5a, 0x0d, 0x7c, 0x1c, 0x15, 0x1d, 0x11, 0x3e, 0x2c, 0x1b, 0x0e, 0x03, 0x22, 0x34, 0x1b, 0x01}));
        put("V6", new ObfuscationValue(0x09, new byte[]{0x33, 0x68, 0x05, 0x35, 0x03, 0x5b, 0x5e, 0x3e, 0x19, 0x1c, 0x08, 0x1b, 0x0d, 0x74, 0x6d, 0x34, 0x02, 0x52, 0x70, 0x0c, 0x16, 0x42, 0x0a}));
        put("V7", new ObfuscationValue(0x05, new byte[]{0x10, 0x1b, 0x4a, 0x18, 0x0a, 0x68, 0x21, 0x10, 0x22, 0x03, 0x3e, 0x5a, 0x27, 0x0d, 0x01, 0x5d, 0x57, 0x06, 0x1c, 0x1e, 0x3f, 0x0f, 0x13}));
        put("V8", new ObfuscationValue(0x09, new byte[]{0x4b, 0x0c, 0x36, 0x1d, 0x1a, 0x17, 0x70, 0x4f, 0x7d, 0x52, 0x6b, 0x1d, 0x27, 0x77, 0x31, 0x5e, 0x1f, 0x24, 0x1c, 0x7b, 0x43, 0x02, 0x51, 0x06, 0x1d, 0x60}));
        put("V9", new ObfuscationValue(0x05, new byte[]{0x58, 0x2e, 0x0e, 0x57, 0x1c, 0x2a, 0x4b, 0x12, 0x12, 0x09, 0x0a, 0x0a, 0x17, 0x57, 0x78, 0x01, 0x02, 0x59, 0x66, 0x0f, 0x18, 0x1b, 0x56, 0x58, 0x50, 0x69, 0x01}));
        put("V10", new ObfuscationValue(0x07, new byte[]{0x7a, 0x33, 0x0a, 0x03, 0x39, 0x12, 0x13, 0x60, 0x06, 0x3d, 0x76, 0x3b, 0x02, 0x4d, 0x54, 0x4b, 0x1e, 0x25, 0x7d, 0x4c, 0x1c, 0x1f, 0x15, 0x0c, 0x11, 0x02, 0x0c, 0x0a, 0x38, 0x17, 0x70}));
        put("V11", new ObfuscationValue(0x05, new byte[]{0x4c, 0x3d, 0x0a, 0x68, 0x56, 0x6d, 0x07, 0x67, 0x6f, 0x0a, 0x36, 0x14, 0x06, 0x16, 0x4c, 0x0d, 0x02, 0x0b, 0x0c, 0x1b, 0x04, 0x23, 0x70, 0x09}));
        put("V12", new ObfuscationValue(0x06, new byte[]{0x3b, 0x6e, 0x1d, 0x0d, 0x6c, 0x13, 0x1c, 0x13, 0x16, 0x70, 0x14, 0x07, 0x55, 0x0c, 0x1f, 0x19, 0x77, 0x16, 0x16, 0x1d, 0x35, 0x54}));
        put("V13", new ObfuscationValue(0x07, new byte[]{0x49, 0x05, 0x09, 0x08, 0x03, 0x72, 0x29, 0x01, 0x24, 0x4e, 0x0f, 0x72, 0x33, 0x6e, 0x0b, 0x30, 0x36, 0x32, 0x44, 0x0f, 0x13}));
        put("V14", new ObfuscationValue(0x05, new byte[]{0x03, 0x02, 0x1c, 0x39, 0x19, 0x15, 0x15, 0x71, 0x10, 0x35, 0x37, 0x08, 0x16, 0x0c, 0x46, 0x1b, 0x2e, 0x46, 0x77, 0x01, 0x12, 0x03, 0x13, 0x02, 0x17, 0x53, 0x27, 0x68, 0x6b, 0x36}));
        put("V15", new ObfuscationValue(0x0A, new byte[]{0x26, 0x2c, 0x34, 0x42, 0x1d, 0x63, 0x49, 0x0b, 0x55, 0x03, 0x49, 0x07, 0x04, 0x1c, 0x09, 0x05, 0x63, 0x07, 0x25, 0x77, 0x73, 0x0c, 0x6a, 0x09, 0x1a, 0x08, 0x0f}));
        put("V16", new ObfuscationValue(0x0A, new byte[]{0x06, 0x18, 0x60, 0x68, 0x3b, 0x3e, 0x3c, 0x06, 0x50, 0x71, 0x52, 0x02, 0x5a, 0x63, 0x03, 0x34, 0x0a, 0x16, 0x1e, 0x18, 0x06, 0x23, 0x65}));
        put("V17", new ObfuscationValue(0x07, new byte[]{0x79, 0x0d, 0x12, 0x08, 0x66, 0x77, 0x2e, 0x5b, 0x02, 0x09, 0x0a, 0x13, 0x11, 0x0c, 0x11, 0x62, 0x1e, 0x38, 0x4c, 0x10, 0x28, 0x13, 0x3c, 0x4a, 0x6e, 0x36, 0x63, 0x0f}));
        put("V18", new ObfuscationValue(0x07, new byte[]{0x49, 0x0b, 0x0e, 0x3b, 0x19, 0x1a, 0x49, 0x61, 0x10, 0x73, 0x19, 0x67, 0x5c, 0x1b, 0x11, 0x21, 0x18, 0x79, 0x66, 0x0f, 0x09, 0x1d, 0x37, 0x5b, 0x53, 0x70, 0x03}));
        put("V19", new ObfuscationValue(0x05, new byte[]{0x0a, 0x36, 0x3e, 0x29, 0x4e, 0x02, 0x18, 0x38, 0x01, 0x36, 0x73, 0x13, 0x14, 0x1b, 0x16, 0x6a, 0x65, 0x4e, 0x0a, 0x14, 0x36, 0x04, 0x18, 0x1c, 0x0c, 0x19, 0x1f, 0x2c, 0x02, 0x5d}));
        put("V20", new ObfuscationValue(0x08, new byte[]{0x5f, 0x0d, 0x01, 0x12, 0x5d, 0x5c, 0x14, 0x2a, 0x17, 0x69, 0x14, 0x0d, 0x09, 0x21, 0x1e, 0x3b, 0x7e, 0x68, 0x5a, 0x12, 0x6a, 0x4b, 0x17, 0x1e, 0x2a, 0x31}));
        put("V21", new ObfuscationValue(0x07, new byte[]{0x65, 0x1d, 0x19, 0x7c, 0x09, 0x79, 0x1d, 0x69, 0x7c, 0x4e, 0x13, 0x0e, 0x04, 0x1b, 0x6a, 0x3c, 0x68, 0x13, 0x15, 0x6b, 0x12, 0x08, 0x3d, 0x1f, 0x16, 0x7e, 0x13, 0x6c}));
        put("V22", new ObfuscationValue(0x08, new byte[]{0x3f, 0x17, 0x79, 0x69, 0x24, 0x6b, 0x37, 0x50, 0x63, 0x09, 0x45, 0x6f, 0x0c, 0x07, 0x07, 0x09, 0x1f, 0x2c, 0x2a, 0x69, 0x12, 0x0c, 0x49, 0x30, 0x10, 0x49, 0x1a, 0x3f, 0x32, 0x04}));
        put("V23", new ObfuscationValue(0x08, new byte[]{0x16, 0x2b, 0x64, 0x62, 0x13, 0x04, 0x18, 0x0d, 0x63, 0x25, 0x14, 0x17, 0x0f, 0x13, 0x46, 0x0c, 0x5b, 0x09, 0x39, 0x1a, 0x79, 0x01, 0x1e, 0x48}));
        put("V24", new ObfuscationValue(0x06, new byte[]{0x7c, 0x36, 0x5c, 0x1a, 0x0d, 0x10, 0x0a, 0x50, 0x07, 0x0f, 0x75, 0x1f, 0x09, 0x3b, 0x0d, 0x72, 0x76, 0x75, 0x5c, 0x7e, 0x35, 0x35, 0x11, 0x5d, 0x4e}));
        put("V25", new ObfuscationValue(0x09, new byte[]{0x07, 0x14, 0x77, 0x1e, 0x3b, 0x5e, 0x79, 0x01, 0x3a, 0x08, 0x07, 0x1f, 0x72, 0x09, 0x55, 0x23, 0x6a, 0x16, 0x12, 0x1e, 0x42, 0x04, 0x16, 0x3d, 0x06, 0x66, 0x5a, 0x07, 0x02, 0x06}));
        put("V26", new ObfuscationValue(0x06, new byte[]{0x03, 0x49, 0x4c, 0x1e, 0x22, 0x4b, 0x1f, 0x0f, 0x1f, 0x70, 0x30, 0x01, 0x60, 0x58, 0x02, 0x7a, 0x30, 0x60, 0x03, 0x0e, 0x4e, 0x07}));
        put("V27", new ObfuscationValue(0x07, new byte[]{0x58, 0x6b, 0x10, 0x79, 0x02, 0x18, 0x10, 0x17, 0x1d, 0x2c, 0x0e, 0x05, 0x65, 0x10, 0x15, 0x22, 0x65, 0x0f, 0x68, 0x28, 0x06, 0x73, 0x1c, 0x08, 0x49, 0x0c, 0x1b, 0x0e}));
        put("V28", new ObfuscationValue(0x0A, new byte[]{0x36, 0x50, 0x1b, 0x73, 0x0f, 0x06, 0x56, 0x2e, 0x1c, 0x4d, 0x14, 0x02, 0x0a, 0x1b, 0x07, 0x7b, 0x50, 0x30, 0x3a, 0x18, 0x7a, 0x61, 0x55, 0x05}));

        put("V9708", new ObfuscationValue(0x05, new byte[]{0x1d, 0x69, 0x49, 0x6d, 0x08, 0x61, 0x17, 0x1e, 0x21, 0x61, 0x6d, 0x1d, 0x1a, 0x51, 0x2e, 0x16, 0x21, 0x06, 0x2a, 0x04, 0x11, 0x09, 0x06, 0x04, 0x3f}));
        put("V1031", new ObfuscationValue(0x08, "Antidisestablishmentarianism".getBytes(StandardCharsets.US_ASCII)));
        put("V2069", new ObfuscationValue(0x07, "Floccinaucinihilipilification".getBytes(StandardCharsets.US_ASCII)));
        put("V9041", new ObfuscationValue(0x06, new byte[]{0x3e, 0x14, 0x0c, 0x12, 0x10, 0x2d, 0x13, 0x26, 0x18, 0x55, 0x1d, 0x05, 0x52, 0x6c, 0x74, 0x03, 0x21, 0x19, 0x1b, 0x13, 0x04, 0x5d, 0x59, 0x19, 0x2c, 0x09, 0x1b}));
        put("V3646", new ObfuscationValue(0x09, new byte[]{0x7e, 0x18, 0x7e, 0x16, 0x4a, 0x5c, 0x18, 0x10, 0x05, 0x0b, 0x07, 0x09, 0x0c, 0x5a, 0x0d, 0x7c, 0x1c, 0x15, 0x1d, 0x11, 0x3e, 0x2c, 0x1b, 0x0e, 0x03, 0x22, 0x34, 0x1b, 0x01}));
        put("V6052", new ObfuscationValue(0x05, new byte[]{0x33, 0x68, 0x05, 0x35, 0x03, 0x5b, 0x5e, 0x3e, 0x19, 0x1c, 0x08, 0x1b, 0x0d, 0x74, 0x6d, 0x34, 0x02, 0x52, 0x70, 0x0c, 0x16, 0x42, 0x0a}));
        put("V9479", new ObfuscationValue(0x09, new byte[]{0x10, 0x1b, 0x4a, 0x18, 0x0a, 0x68, 0x21, 0x10, 0x22, 0x03, 0x3e, 0x5a, 0x27, 0x0d, 0x01, 0x5d, 0x57, 0x06, 0x1c, 0x1e, 0x3f, 0x0f, 0x13}));
        put("V9888", new ObfuscationValue(0x05, new byte[]{0x4b, 0x0c, 0x36, 0x1d, 0x1a, 0x17, 0x70, 0x4f, 0x7d, 0x52, 0x6b, 0x1d, 0x27, 0x77, 0x31, 0x5e, 0x1f, 0x24, 0x1c, 0x7b, 0x43, 0x02, 0x51, 0x06, 0x1d, 0x60}));
        put("V4648", new ObfuscationValue(0x07, new byte[]{0x58, 0x2e, 0x0e, 0x57, 0x1c, 0x2a, 0x4b, 0x12, 0x12, 0x09, 0x0a, 0x0a, 0x17, 0x57, 0x78, 0x01, 0x02, 0x59, 0x66, 0x0f, 0x18, 0x1b, 0x56, 0x58, 0x50, 0x69, 0x01}));
        put("V5683", new ObfuscationValue(0x05, new byte[]{0x7a, 0x33, 0x0a, 0x03, 0x39, 0x12, 0x13, 0x60, 0x06, 0x3d, 0x76, 0x3b, 0x02, 0x4d, 0x54, 0x4b, 0x1e, 0x25, 0x7d, 0x4c, 0x1c, 0x1f, 0x15, 0x0c, 0x11, 0x02, 0x0c, 0x0a, 0x38, 0x17, 0x70}));
    }

    public static ObfuscationTable getInstance() {
        return instance;
    }
}
